/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OCRS;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author audrey
 */
public class admin_Register extends javax.swing.JFrame {

    /**
     * Creates new form admin_Register
     */
    public admin_Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name_f = new javax.swing.JTextField();
        id_f = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        designation_s = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        usr_f = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pwd_conf_f = new javax.swing.JPasswordField();
        pwd_f = new javax.swing.JPasswordField();
        regist_b = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        mastpass_f = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        reset_b = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sec_quest_s = new javax.swing.JComboBox();
        sec_ans_f = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name");

        jLabel2.setText("ID");

        id_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_fActionPerformed(evt);
            }
        });

        jLabel3.setText("Designation");

        designation_s.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Designation", "Administrative Assistant", "Administrative Coordinator", "Administrative Director", "Administrative Manager", " " }));
        designation_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designation_sActionPerformed(evt);
            }
        });

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("A D M I N  R E G I S T R A T I O N  P A G E");

        jLabel7.setText("Reconfirm Password");

        regist_b.setText("Register");
        regist_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regist_bActionPerformed(evt);
            }
        });

        backButton.setText("Cancel");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Master Password");

        jLabel9.setText("Please fill in the fields below to register an account. All fields are mandatory.");

        reset_b.setText("Reset");
        reset_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_bActionPerformed(evt);
            }
        });

        jLabel11.setText("Username must be at least 8 characters long.");

        jLabel13.setText("Password must be at least 8 characters long and");

        jLabel15.setText("contain at least 1 numeric character.");

        jLabel10.setText("Security Question:");

        sec_quest_s.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Question", "What city were you born in?", "What's the model of your first car?", "What's your childhood nickname?" }));

        jLabel12.setText("*note that username CANNOT be changed.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id_f)
                                    .addComponent(designation_s, 0, 234, Short.MAX_VALUE)
                                    .addComponent(usr_f)
                                    .addComponent(name_f)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(regist_b)
                                        .addGap(18, 18, 18)
                                        .addComponent(reset_b)
                                        .addGap(18, 18, 18)
                                        .addComponent(backButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15)
                                                .addComponent(pwd_f, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(sec_quest_s, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sec_ans_f, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pwd_conf_f, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(35, 35, 35)
                                .addComponent(mastpass_f, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(designation_s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usr_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(0, 0, 0)
                .addComponent(jLabel11)
                .addGap(0, 0, 0)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwd_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(0, 0, 0)
                .addComponent(jLabel13)
                .addGap(0, 0, 0)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwd_conf_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(sec_quest_s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(sec_ans_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mastpass_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regist_b)
                    .addComponent(backButton)
                    .addComponent(reset_b))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regist_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regist_bActionPerformed
        //Declaring objects and variables
        String line_sep = System.lineSeparator();
        Pattern digitCasePatten = Pattern.compile("[0-9 ]");
        String name, id, designation, uname, pwd, pwd_conf, sec_quest, sec_ans, mastpass;
        String[] temp;

        //Assigning text to variables
        name = name_f.getText();
        id = id_f.getText().toUpperCase();//change to uppercase
        designation = designation_s.getSelectedItem().toString();
        uname = usr_f.getText();
        pwd = pwd_f.getText();
        pwd_conf = pwd_conf_f.getText();
        sec_quest = sec_quest_s.getSelectedItem().toString();
        sec_ans = sec_ans_f.getText();
        mastpass = mastpass_f.getText();

        //Validating that all text fields are complete
        if (name.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your name.");
            return;
        } else if (id.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your ID.");
            return;
        } else if (designation.equals("Select Designation")) {
            JOptionPane.showMessageDialog(null, "Please select a designation.");
            return;
        } else if (uname.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter a Username.");
            return;
        } else if (uname.length() < 8) {
            JOptionPane.showMessageDialog(null, "Username has to be at least 8 characters long.");
            return;
        } else if (pwd.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter a Password.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        } else if (pwd.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password has to be at least 8 characters long.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        } else if (!digitCasePatten.matcher(pwd).find()) {
            JOptionPane.showMessageDialog(null, "Password has to have at least 1 numeric character.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        } else if (sec_quest.equals("Select Question")) {
            JOptionPane.showMessageDialog(null, "Please select a security question.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        } else if (sec_ans.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please answer the security question.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        } else if (!mastpass.equals("123Admin456")) {
            JOptionPane.showMessageDialog(null, "Invalid Master Password entered, please try again.");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
            return;
        }
        //Check if user exists, if exist then reset form
        try {
            FileWriter fw = new FileWriter("Admin_Profile_DB.txt", true);
            FileReader fr = new FileReader("Admin_Profile_DB.txt");
            BufferedReader br = new BufferedReader(fr);
            String reader;
            reader = br.readLine();

            if ("testnull".equals(reader)) {
                System.out.println("This shouldn't happen, please ignore this section, it's just to handle NullPointerException.");
                return;
            }
            else {
            
                //If no user exists at all then register all details
                if(reader == null){

                    //If password confirmation matches
                    if(pwd.equals(pwd_conf)){    
                        fw.write(name + "," + id + "," + designation + "," + uname + "," + pwd + "," + sec_quest + "," + sec_ans);
                        fw.write(line_sep);
                        fw.close();
                        JOptionPane.showMessageDialog(null, "User successfully registered, you can now log in.");
                        Login_Page lp = new Login_Page();
                        lp.setVisible(true);
                        br.close();
                        fr.close();                      
                        this.dispose();
                        return;
                    }

                    //If password confirmation does not match
                    else{
                        JOptionPane.showMessageDialog(null, "Password confirmation does not match, please try again.");
                        pwd_f.setText("");
                        pwd_conf_f.setText("");
                        br.close();
                        fr.close();
                        fw.close();                    
                        return;
                    }
                }            
            
                //If user exists, ask user to login or reset password instead, send back to login page
                while (reader.length() != 0) {
                    temp = reader.split(",");
                    if (id.equals(temp[1]) || uname.equals(temp[3])) {
                        JOptionPane.showMessageDialog(null, "User already exists, please login or reset password.", "Error", JOptionPane.ERROR_MESSAGE);
                        Login_Page lp = new Login_Page();
                        lp.setVisible(true);
                        br.close();
                        fr.close();
                        fw.close();
                        this.dispose();
                        return;
                    }
                    reader = br.readLine();
                    if ("testnull".equals(reader)) {
                        System.out.println("This shouldn't happen, please ignore this section, it's just to handle NullPointerException.");
                        return;
                    }
                    else {
                        //If user does not exist then register all details
                        if (reader == null){
                            //If password confirmation matches
                            if (pwd.equals(pwd_conf)) {
                                //If master password is correct
                                if (mastpass.equals("123Admin456")) {
                                    fw.write(name + "," + id + "," + designation + "," + uname + "," + pwd + "," + sec_quest + "," + sec_ans);
                                    fw.write(line_sep);
                                    fw.close();
                                    JOptionPane.showMessageDialog(null, "User successfully registered, you can now log in.");
                                    Login_Page lp = new Login_Page();
                                    lp.setVisible(true);
                                    br.close();
                                    fr.close();                        
                                    this.dispose();
                                    return;
                                }
                                //If master password is wrong
                                else {
                                    JOptionPane.showMessageDialog(null, "Invalid Master Password, please try again.");
                                    pwd_f.setText("");
                                    pwd_conf_f.setText("");
                                    mastpass_f.setText("");
                                    br.close();
                                    fr.close();
                                    fw.close();
                                    return;
                                }
                            } //If password confirmation does not match
                            else {
                                JOptionPane.showMessageDialog(null, "Password confirmation does not match, please try again.");
                                pwd_f.setText("");
                                pwd_conf_f.setText("");
                                mastpass_f.setText("");
                                br.close();
                                fr.close();
                                fw.close();
                                return;
                            }
                        }
                    }
                }
            }
        } catch (Exception reg) {
            JOptionPane.showMessageDialog(null, "System error " + reg);
        }
    }//GEN-LAST:event_regist_bActionPerformed

    private void reset_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_bActionPerformed
        try {
            name_f.setText("");
            id_f.setText("");
            designation_s.setSelectedIndex(0);
            usr_f.setText("");
            pwd_f.setText("");
            pwd_conf_f.setText("");
            mastpass_f.setText("");
        } catch (Exception res) {
            JOptionPane.showMessageDialog(null, "System error" + res);
        }
    }//GEN-LAST:event_reset_bActionPerformed

    private void designation_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designation_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designation_sActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        Login_Page lp = new Login_Page();
        lp.setVisible(true);
        this.dispose();
        return;
    }//GEN-LAST:event_backButtonActionPerformed

    private void id_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_fActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_fActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> designation_s;
    private javax.swing.JTextField id_f;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField mastpass_f;
    private javax.swing.JTextField name_f;
    private javax.swing.JPasswordField pwd_conf_f;
    private javax.swing.JPasswordField pwd_f;
    private javax.swing.JButton regist_b;
    private javax.swing.JButton reset_b;
    private javax.swing.JTextField sec_ans_f;
    private javax.swing.JComboBox sec_quest_s;
    private javax.swing.JTextField usr_f;
    // End of variables declaration//GEN-END:variables
}
