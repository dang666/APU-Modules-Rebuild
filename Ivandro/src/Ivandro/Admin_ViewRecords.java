
package ivandroassignment;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class Admin_ViewRecords extends javax.swing.JFrame {

  

    
    public Admin_ViewRecords() {
        initComponents();
        
        
    currentDate(); // Function for the system date and time
    }
    // Sets the time and date in the System
    public void currentDate (){
        
        Calendar cal =new GregorianCalendar();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        int day = cal.get(Calendar.DAY_OF_MONTH);
        
        jlabelDate.setText(day+"/"+(month+1) +"/"+year);
        
        //Time
      
        
        int minutes = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);
        
        jLabelTime.setText(hour+":"+(minutes));
       
    }
    // Creation of the void Close to close the windows
    private void close() {
        WindowEvent closewindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closewindow);
        
    }
    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelTime = new javax.swing.JLabel();
        jlabelDate = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxUserType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableStudents = new javax.swing.JTable();
        jButtonGoback = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableLecturer = new javax.swing.JTable();
        jButtonViewRecords = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 204));

        jLabelTime.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelTime.setText("Time");

        jlabelDate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jlabelDate.setText("Date");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("View Records");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTime)
                    .addComponent(jlabelDate)
                    .addComponent(jLabel1))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jComboBoxUserType.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBoxUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Choose One", "Student", "Lecturer" }));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Select the user Type");

        TableStudents.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " ID", "First Name", "Surname", "Birth", "Gender", "Email", "Number", "Degree ", "Address", "House No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableStudents);
        if (TableStudents.getColumnModel().getColumnCount() > 0) {
            TableStudents.getColumnModel().getColumn(0).setMinWidth(50);
            TableStudents.getColumnModel().getColumn(0).setMaxWidth(60);
            TableStudents.getColumnModel().getColumn(1).setMinWidth(80);
            TableStudents.getColumnModel().getColumn(1).setPreferredWidth(80);
            TableStudents.getColumnModel().getColumn(1).setMaxWidth(85);
            TableStudents.getColumnModel().getColumn(2).setPreferredWidth(30);
            TableStudents.getColumnModel().getColumn(3).setPreferredWidth(20);
            TableStudents.getColumnModel().getColumn(4).setPreferredWidth(20);
            TableStudents.getColumnModel().getColumn(5).setPreferredWidth(120);
            TableStudents.getColumnModel().getColumn(6).setPreferredWidth(20);
            TableStudents.getColumnModel().getColumn(7).setMinWidth(120);
            TableStudents.getColumnModel().getColumn(7).setPreferredWidth(150);
            TableStudents.getColumnModel().getColumn(7).setMaxWidth(160);
            TableStudents.getColumnModel().getColumn(8).setPreferredWidth(50);
            TableStudents.getColumnModel().getColumn(9).setPreferredWidth(10);
        }

        jButtonGoback.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButtonGoback.setText("Go Back");
        jButtonGoback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGobackActionPerformed(evt);
            }
        });

        TableLecturer.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        TableLecturer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " ID", "First Name", "Surname", "Birth", "Gender", "Email", "Number", "Field", "Hired", "Address", "House No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableLecturer);
        if (TableLecturer.getColumnModel().getColumnCount() > 0) {
            TableLecturer.getColumnModel().getColumn(5).setPreferredWidth(200);
            TableLecturer.getColumnModel().getColumn(6).setPreferredWidth(120);
            TableLecturer.getColumnModel().getColumn(7).setPreferredWidth(150);
            TableLecturer.getColumnModel().getColumn(9).setPreferredWidth(150);
        }

        jButtonViewRecords.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonViewRecords.setText("View Records");
        jButtonViewRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewRecordsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3)
                        .addGap(54, 54, 54)
                        .addComponent(jComboBoxUserType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(865, Short.MAX_VALUE)
                        .addComponent(jButtonGoback)))
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButtonViewRecords, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButtonViewRecords)
                .addGap(30, 30, 30)
                .addComponent(jButtonGoback)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGobackActionPerformed
        // TODO add your handling code here:
        // Allows the program to go back to the previous window
        close();
        Admin_Menu goback = new Admin_Menu();
        goback.setVisible(true);
    }//GEN-LAST:event_jButtonGobackActionPerformed

    private void jButtonViewRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewRecordsActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) TableStudents.getModel();
        
       
        
        
        FileReader fr = null;
  
        try {
            File Students = new File ("Students.txt");
            fr = new FileReader(Students);
            BufferedReader br = new BufferedReader(fr);
            String data;
            Student student;
            
            while ((data = br.readLine()) != null){
             student = new Student(data);
            
        ArrayList<Student> list = new ArrayList<>();
        Object rowdata[] = new Object[10];
        
        
        list.add(student);
        
        
        for(int i = 0; i < list.size(); i++)
        {
            rowdata[0] = list.get(i).getId();
            rowdata[1] = list.get(i).getFirstname();
            rowdata[2] = list.get(i).getLastname();
            rowdata[3] = list.get(i).getBirth();
            rowdata[4] = list.get(i).getGender();
            rowdata[5] = list.get(i).getEmail();
            rowdata[6] = list.get(i).getphone();
            rowdata[7] = list.get(i).getCourse();
            rowdata[8] = list.get(i).getAddress();
            rowdata[9] = list.get(i).getHouse();
            model.addRow(rowdata);
        }
        
             
             
            }
            
            
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
            Logger.getLogger(Admin_SearchRecords.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
                
                
            } catch (IOException ex) {
                Logger.getLogger(Admin_SearchRecords.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
        
        
        // View Records for Lecturers
        DefaultTableModel lecmodel = (DefaultTableModel) TableLecturer.getModel();
  
        try {
            File Lecturers = new File ("Lecturer.txt");
            fr = new FileReader(Lecturers);
            BufferedReader br = new BufferedReader(fr);
            String datas;
            Lecturer lecturer;
            
            while ((datas = br.readLine()) != null){
             lecturer = new Lecturer(datas);
            
        ArrayList<Lecturer> lists = new ArrayList<>();
        Object rowdatas[] = new Object[12];
        
        
        lists.add(lecturer);
        
        
        for(int i = 0; i < lists.size(); i++)
        {
            rowdatas[0] = lists.get(i).getId();
            rowdatas[1] = lists.get(i).getFirstname();
            rowdatas[2] = lists.get(i).getLastname();
            rowdatas[3] = lists.get(i).getBirth();
            rowdatas[4] = lists.get(i).getGender();
            rowdatas[5] = lists.get(i).getEmail();
            rowdatas[6] = lists.get(i).getphone();
            rowdatas[7] = lists.get(i).getField();
            rowdatas[8] = lists.get(i).getYearhired();
            rowdatas[9] = lists.get(i).getAddress();
            rowdatas[10] = lists.get(i).getHouse();
            
            lecmodel.addRow(rowdatas);
        }
        
             
             
            }
            
            
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
            Logger.getLogger(Admin_SearchRecords.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
                
                
            } catch (IOException ex) {
                Logger.getLogger(Admin_SearchRecords.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_jButtonViewRecordsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_ViewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_ViewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_ViewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_ViewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_ViewRecords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableLecturer;
    private javax.swing.JTable TableStudents;
    private javax.swing.JButton jButtonGoback;
    private javax.swing.JButton jButtonViewRecords;
    private javax.swing.JComboBox<String> jComboBoxUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlabelDate;
    // End of variables declaration//GEN-END:variables

   


}
